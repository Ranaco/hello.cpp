// using namespace std;
// #include<iostream>
// int main()
// {
//     cout <<"Hello World";
//     return 01`;
// }
// #include<iostream>
// using namespace std;
// int main()
// {   int a,b;
//     cout << "Enter the value of number 1 : ";
//     cin >> a;
//     cout << "Enter the value of number 1 : ";
//     cin >> b;

//     cout << "Sum is " << a+b;
//     return 0;
// }
// #include<iostream>
// using namespace std;
// // There are two types of header files;
// // 1. System header file;
// // 2. User defined header file;
// int c = 45;
// int main()
// {   int a,b,c;
//     cout<<"Hello world"<< 63 << endl;
//     cout << "Enter the value of a : " << endl;
//     cin >> a;
//     cout << "Enter the value of b : " << endl;
//     cin >> b;
//     c=a+b;
//     cout << "The sum is :  " << c << endl;
//     cout << "The value of the global variable c is : " << ::c;
//     return 0;

// }
// #include<iostream>
// #include<iomanip>
// using namespace std;
// int main()
// {
//     // // int a =34;
//     // //constats in c++
//     // const int a = 3;
//     // cout << "The valu of a is : "<< a;
//     // int a=3,b=23,c=1233;
//     //Manupulators in c++
//     // cout << "The value of a is : " << setw(4) << a << endl;
//     // cout << "The value of b is : " << setw(4) << b << endl;
//     // cout << "The value of c is : " << setw(4) << c << endl;
//     // operator prcedence
//     int a=3, b=4;
//     int c = a*5+b;
//     cout << c;
//     return 0;

// }
// #include<iostream>
// using namespace std;
// int main()
// {
//     int num1, num2;
//     cout << "Enter the value of num1 : ";  // << This is known as insertion operator
//     cin >> num1;    // >> This is known as the extraction operator

//     cout << "Enter the value of num2 : ";
//     cin >> num2;

//     cout << "\nSum is " << num1+num2;
//     return 0;
// }
// #include<iostream>
// using namespace std;
//  int c = 38;
//  int main()
//  {
//     //  int a, b, c;
//     //  cout << "Enter the value of a : ";
//     //  cin >> a;
//     //  cout << "Enter the value of b : ";
//     //  cin >> b;
//     //  c = a + b;
//     //  cout << "The sum of a and b are : " << c << endl;
//     //  cout << "The value of the golbal variable c is : " << ::c; //This is the scope resolution
//     //  //34.4f is a float because c++ expects that any number with a decimal is double; and 34.4L is a long double
//     int x = 499;
//     int &y =x;
//     cout << x << endl;
//     cout << y;
//      return 0;

//  }
// #include<iostream>
// using namespace std;

// int main()
// {
//     int a=3;
//     int *p =&a;

//     return 0;
// }
// #include<iostream>
// using namespace std;
// void swap(int *a,int *b)
// {
//     int temp;
//     temp = *a;
//     *a = *b;
//     *b = temp;
// }
// inline void swapvar(int &a,int &b)
// {   int temp;
//     static int c = 3; //This executes only once which means further changes to this will change the original value of the variable

//     temp = a;
//     a = b;
//     b = temp;
// }
// int main()
// {
//     int a, b;
//     cout << "Enter the value of a : ";
//     cin >> a;
//     cout << "Enter the value of b : ";
//     cin >> b;
//     cout << "Value of a and b before swapping there values : " << a <<", "<< b << endl;
//     // swap(&a,&b);
//     swapvar(a,b);
//     cout << "Value of a and b after swapping there values :" << a << ", " << b;
// }
// #include<iostream>
// using namespace std;
// int money(int mon, float factor = 1.04/*This is known as default arguments*/)
// {
//     return mon*factor;
// }

// int main()
// {   int mon;
//     cout << "Enter your yearly salary : ";
//     cin >> mon;
//     cout << "According to our plan you'll get " << money(mon) << " after one year." << endl;
//     cout << "for VIP : According to our plan you'll get "<< money(mon,1.1) << " after one year";
// }
// #include<iostream>
// using namespace std;
// inline int fact(int a)
// {
//     int fac;
//     if(a == 1 || a == 0)
//     {
//         return 1;
//     }
//     else
//     {
//         return fac = a * fact(a-1);
//     }
// }

// int main()
// {
//     int num;
//     cout << "Enter a number to find its factorial : ";
//     cin >> num;
//     cout << "Factorial of " << num << " is : " << fact(num);
// }
// #include<iostream>
// using namespace std;

// int add(int a, int b)
// {
//     return a+b;
// }
// int add(int a, int b, int c)
// {
//     return a+b+c;
// }
// int main()
// {
//     cout << "The sum of 3 and 6 is " << add(3,6) << endl;
//     cout << "The sum of 3, 4 and 6 is " << add(3,4,6);
//     return 0;
// }
// #include<iostream>
// using namespace std;
// class Employee
// {
//     private:
//     int a,b,c;
//     public:
//     int d,e;
//     void setData(int a1, int b1, int c1); //Declaration
//     void getData();

// };

// void Employee :: setData(int x,int y, int z)
// {
//     a=x;
//     b=y;
//     c=z;
// }

// void Employee :: getData()
// {

//         cout << "The value of a is " << a << endl;
//         cout << "The value of b is " << b << endl;
//         cout << "The value of c is " << c << endl;
//         cout << "The value of d is " << d << endl;
//         cout << "The value of e is " << e << endl;

// }
// int main()
// {

//     Employee harry;
//     harry.d = 34;
//     harry.e = 45;
//     harry.setData(1,2,3);
//     harry.getData();
//     return 0;
// }

// #include<iostream>
// using namespace std;
//   class binary{
//         string s;
//         void chk_bin(void); ////This has turned to private function only the functions can call this function and not the user

//         public :
//         void read(void);
//         void ones(void);
//         void inter();
//     };
//  void binary:: read(void)
//  {
//      cout << "Enter a binary number " << endl;
//      cin >> s;
//  }
//  void binary :: chk_bin(void)
//  {
//      for(int i = 0; i < s.length(); i++)
//      {
//          if(s[i] != '0' && s[i] != '1')
//          {
//              cout << "Incorrct binary format.";
//              exit(0);
//          }
//      }
//      cout << "Binary code accepted";
//  }
// void binary :: ones()
// {   chk_bin();
//     int count=0;
//     for(int i=0; i < s.length(); i++)
//     {
//         if(s.at(i)=='1')
//         {
//             count++;
//         }
//     }
//     cout << endl << "Total number of ones in the binary is : " << count;
// }
// void binary :: inter(void)
// {
//     for(int i = 0; i < s.length(); i++)
//     {
//         if(s.at(i)=='1')
//         {
//             s.at(i)='0';
//         }
//         else if(s.at(i) == '0')
//         {
//             s.at(i) = '1';
//         }
//     }
//     cout << endl << "New updated string is " ;
//     for(int i = 0; i< s.length(); i++)
//     {
//     cout << s.at(i);
//     }
// }
// int main()
// {
//     // classes and objects
//     // structures had limitations
//     // classes can make members public and private as the wish of the user
//     // struct in c++ are typedef
//     // You can declare objects along with the class declaration
//     //  class Employee {
//     //      class definaton;
//     //  }harry,rohan,lovisg;

//     // Nestying of member function
//     binary b;
//     b.read();
//     // b.chk_bin();
//     b.ones();
//     b.inter();
//     return 0;
// }
// #include<iostream>
// using namespace std;
// class student
// {  public:
//    string name;
//    int roll;
//    string add;
// }stud[10];



// int main()
// {
//     stud[1].name = "John";
//     stud[1].roll = 2;
//     stud[1].add = "Opp. Stark Tower";
//     stud[2].name = "Sam";
//     stud[2].roll = 3;
//     stud[2].add = "below Helicarrer";
//     cout << "Name of the student is " << stud[1].name << endl << "Roll number of the student is " << stud[1].roll << endl << "Address of the student : " << stud[1].add << endl << endl;
//     cout << "Name of the student is " << stud[2].name << endl << "Roll number of the student is " << stud[2].roll << endl << "Address of the student : " << stud[2].add << endl;
//     return 0;
// }
// #include<iostream>
// #include<cmath>
// using namespace std;

// class triangle
// {   int a,b,c;
//     void area(int a, int b, int c);
//     void perimeter(int a, int b, int c);
//     public:
//     void input();
// }tri;

// void triangle :: area(int a, int b, int c)
// {
//     float area;
//     float s;
//     s = (a + b + c)/2.0;
//     cout << "Semi-perimeter of the triangle : " << s << endl;
//     area = sqrt(s * (s - a) * (s - b) * (s - c));
//     cout << "Area of the triangle : " << area << endl;
// }

// void triangle :: perimeter (int a, int b, int c)
// {
//     cout << "Perimeter of the triangle : " << a + b + c << endl;
// }

// void triangle :: input()
// {
//     cout << "Enter the sides of the triangle : ";
//     cin >> a >> b >> c;
//     area(a,b,c);
//     perimeter(a,b,c);
// }

// int main()
// {   tri.input();
//     return 0;
// }
// #include<iostream>
// using namespace std;
// int i;

// class Rectangle
// {
//     void Area(int a,int b);
//     public:
//     void Input();
//     int a,b;
// }rect[2];

// void Rectangle :: Area (int a, int b)
// {
//     cout << endl << "Area of the rectangle is " << a * b << endl;
// }

// void Rectangle :: Input()
// {
//     cout << "Enter the sides of the rectangle : ";
//     cin >> a >> b;
//     Area(a, b);
// }

// int main()
// {for(i = 0; i < 2; i++)
//     rect[i].Input();
//     // rect[0].a = 4;
//     // rect[0].b = 5;
//     // rect[1].a = 5;
//     // rect[1].b = 8;
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class Shop
// {

//     int itemid[100];
//     int itempr[100];
//     int counter;
//     public:
//     void initCounter(void) {counter = 0;}
//     void getid(void);
//     void outid(void);
// };

// void Shop :: getid(void)
// {
//     cout << "Enter the ID of the item : " << endl;
//     cin >> itemid[counter];
//     cout << "Enter the price of the item : "<< endl;
//     cin >> itempr[counter];
//     counter++;
// }
// void Shop :: outid()
// {
//     for(int i = 0; i <counter; i++)
//     {
//         cout << "Ther price of item of item ID " << itemid[i] << " is " << itempr[i] << endl;
//     }
// }

// int main()
// {   Shop dukaan;
//     cout << "Welcome to shop management system";
//     dukaan.initCounter();
//     dukaan.getid();
//     dukaan.getid();
//     dukaan.outid();
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class Employee{
//     int id;
//     static int count;
//     public:
//     void setdata(void)
//     {   cout << "Enter the id" << endl;
//         cin >> id;
//         count++;
//     }
//     void getdata(void)
//     {
//         cout << "ID of this employee is " << id << " and this employee no." << count;
//     }
// };
// int Employee ::count;

// int main()
// {
//     Employee harry, rohan;
//     harry.setdata();
//     harry.getdata();
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class Average
// {
//     public:
//    static void avg(int a, int b, int c);
// };

// void Average :: avg(int a, int b, int c)
// {
//     cout << endl << "Average of " << a << ", " << b << " and " << c << " is " << (a + b + c)/3 << endl;
// }

// int main()
// {   int a, b, c;
//     cout << "Enter three numbers to find there average : ";
//     cin >> a >> b >> c;
//     Average :: avg(a, b, c);
//     return 0;
// }
// #include<iostream>
// using namespace std;

// static int re1, im1, re2, im2;

// class Complex
// {
//     void sum();
//     void pro();
//     void diff();
//     public:
//     void input();

// }com;



// void Complex :: sum()
// {
//     cout << "Sum of the two complex numbers : " <<  re1+re2 << " " << im1+im2 << "i" << endl;
// }

// void Complex :: pro()
// {
//     cout << "Product of the two complex numbers : ";
//     cout << (re1 * re2) - (im1 * im2)  << "+ i" << (re1 * im2) + (im1 * re2) << endl;
// }

// void Complex :: diff()
// {
//     cout << "Difference of the two complex numbers : " << re1 - re2 << " " << im1 - im2 << "i" << endl;
// }

// void Complex :: input()
// {
//     sum();
//     pro();
//     diff();
// }

// int main()
// {
//     cout << "Enter the real part of the complex number : ";
//     cin >> re1;
//     cout << "Enter the imaginary part of the complex number : ";
//     cin >> im1;
//     cout << "Enter the real part of second complex number : ";
//     cin >> re2;
//     cout << "Enter the imaginary part of second complex number : ";
//     cin >> im2;
//     com.input();
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class Employee
// {   int id;
//     static int count ;//count is the static data member of class Employee
    //This variable is not related to any object but to the class//this is also known as class variable
    //whenever this variable is called or modified it will be its saved in its static memory
    //and will not change with the objects;

//     public:
//     void setData(void)
//     {
//         cout << endl <<  "Enter the ID : ";
//         cin >> id;
//         count++;
//     }
//     void getData()
//     {   cout << endl << "ID of " << count <<" employee is : ";
//         cout << id;
//     }
//     static void getCount(void)
//     {
//         cout<< endl << "The value of count is " << count << endl;
//     }
// }harry, rohan, lovish;

// int Employee :: count;//Default value is 0;

// int main()
// {
//     harry.setData();
//     harry.getData();

//     Employee::getCount();//We can use the static members, static variables or static functions, without using any object;
//     rohan.setData();
//     rohan.getData();

//     Employee::getCount();
//     lovish.setData();
//     lovish.getData();

//     Employee::getCount();
//     return 0;
// }

//  #include<iostream>
//  using namespace std;

//     class Employee
//     {
//         int id;
//         int salary;
//         public:
//         void setID(void)
//         {
//             cout << "Enter id of employee : ";
//             cin >> id;
//         }
//         void getId()
//         {
//             cout << "The id of the employee is : " << id << endl;
//         }
//     }harry, rohan, lovish, shruti;

//  int main()
//  {
//      harry.setID();
//      harry.getId();
//      return 0;
//  }
// #include<iostream>
// using namespace std;
// class complex
// {
//     int a;
//     int b;
//     public://access specifier
//     void setData(int f1, int f2)//This function is just used for the sake of good programming practice and wouldn't had made any change in the program;
//     {
//         a = f1;
//         b = f2;
//     }
//     void setDataBySum(complex o1, complex o2)
//     {
//         a = o1.a + o2.a;
//         b = o1.b + o2.b;
//             printNumber();
//     }
//     void printNumber()
//     {
//         cout << "Your complex number is " << a << " + i" << b << endl;
//     }
// }c1, c2, c3;
// int main()
// {
//     c1.setData(1,2);
//     c1.printNumber();
//     c2.setData(3,4);
//     c2.printNumber();
//     c3.setData(5,6);
//     c3.printNumber();
//     c3.setDataBySum(c1, c2);
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class rectangle
// {
//     int len, bre;
//     void check()
//     {
//         if(len * bre == len *len)
//         {
//             cout << "The given dimensions are that of a square." << endl;
//         }
//         else
//         {
//             cout << "The given dimensions are that of a rectangle." << endl;
//         }
//     }
//     public:
//      void input()
//     {
//         cout << "Enter the length of the rectangle : ";
//         cin >> len;
//         cout << "Enter the breadth of the rectangle : ";
//         cin >> bre;
//         check();
//     }
// }rec;

// int main()
// {
//     rec.input();
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class bill
// {
//     float qua, pri, tot;

//     void total()
//     {
//         offer();
//         cout << "The total price of your purchase is : " << tot << endl ;
//     }
//     void offer()
//     {
//         if(qua * pri > 1000)
//         {
//             tot = 0.9 * qua * pri;
//         }
//         else
//         {
//             tot = qua * pri;
//             cout << "No discount!" << endl;
//         }
//     }
//     public:
//     void input()
//     {
//         cout << "Enter the quantity of item : ";
//         cin >> qua;
//         cout << "Enter the rate of the item : ";
//         cin >> pri;
//         total();
//     }
// }item;

// int main()
// {
//     item.input();
//     return 0;
// }

// #include<iostream>
// using namespace std;

// int main()
// {
//     char cha;
//     cout << "Enter the character : ";
//     cin >> cha;
//     if(cha >= 65 && cha <= 90)
//     {
//         cout << "This is capital letter.";
//     }
//     else if(cha >= 97 && cha <= 122)
//     {
//         cout << "This is lower case letter.";
//     }
//     else if(cha >= 48 && cha <= 57)
//     {
//         cout << "This is a number.";
//     }
//     else
//     {
//         cout << "This is a symbol.";
//     }
//     return 0;
// }
// #include<iostream>
// using namespace std;

// int main()
// {
//     int num, a, b, c, d;
//     cout << "Enter a number two be reversed : ";
//     cin >> num;
//     a = num / 1000;
//     num = num % 1000;
//     b = num / 100;
//     num = num % 100;
//     c = num / 10;
//     num = num %10;
//     d = num;
//     cout << "The number reversed is " << d << c << b << a;
//     return 0;
// }
// #include<iostream>
// using namespace std;

// int main()
// {
//     cout << "This is a program to print a star patteren" << endl << endl;
//     for(int i = 1; i < 5; i++)
//     {
//         for(int j = 1; j <= i; j++)
//         {
//             cout << "*";
//         }
//         cout << endl;
//     }
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class Complex
// {
//     int a, b;
//     public:
//     void setNumber(int n,int n1)
//     {
//         a = n;
//         b = n1;
//         printNumber();
//     }
//     void printNumber()
//     {
//         cout << "Your number is " << a << " + " << b << "i" << endl;
//     }
//     friend Complex sumComplex(Complex o1, Complex o2);//This makes a function which is not a member of the class but can use its private data;
// }num, num1, sum;

// Complex sumComplex(Complex o1, Complex o2)
// {
//     Complex o3;
//     o3.setNumber((o1.a + o2.a), (o1.b + o2.b));
//     return o3;
// }


// int main()
// {   int a, b;
//     cout << "Enter the real and the imaginary parts of the complex numbers : ";
//     cin >> a >> b;
//     num.setNumber(a, b);
//     int c, d;
//     cout << "Enter the real and imaginary parts of the complex numbers : ";
//     cin >> c >> d;
//     num1.setNumber(c, d);
//     sum = sumComplex(num, num1);
//     return 0;
// }
/*Properties of a friend function
1. Not in the scope of the class
2. Since it is not the function of the class so it can't be invoked using objects
3. Usually contains the objects as arguments;
4. To use the data of the class it has to call it in the following syntax : obj_name.obj_data;*/
// #include<iostream>
// using namespace std;

// class Employee
// {   int sal, *sal1;
//     int hour, final1 = 0, final2 = 0, final;
//     void AddSal(int s)
//     {
//         if(s < 500)
//         {
//             final1 = 10;
//         }
//         else
//         {
//             final1 = 0 ;
//         }
//     }
//     void AddWork(int hou)
//     {
//         if(hou > 6)
//         {
//             final2 =  5;
//         }
//         else
//         {
//             final2 = 0;
//         }
//     }
//     public:
//     void getInfo()
//     {
//         cout << "Enter the salary of the employee : ";
//         cin >> sal;
//         cout << "Enter the number of working hours : ";
//         cin >> hour;
//         AddSal(sal);
//         AddWork(hour);
//         final = sal + final1 + final2;
//         cout << "Your final salary is " << Employee :: final << endl;

//     }
// }emp;

// int main()
// {

//     emp.getInfo();
//     return 0;
// }
// #include<iostream>
// using namespace std;

// struct Library
// {
//     int acc;
//     string author;
//     string title;
//     int flag;
// };

// int main()
// {
//     cout << "Welcome to the library menu : " << endl << endl;
//     cout <<
//     return 0;
// }
// #include<iostream>
// using namespace std;

//Forward declaration//When we define more than two classed in a program
// and use the variable of one class in the function of another class we have to
// use friend function. This makes the new class eligible for using the private members/
// of the class. And then we have to define the class, using the variable of the
// other class, before the class. And we have to define the function of the class
// that is using the private member outside the class. And we also have to
// tell the compiler that there is a class of which we are using the private m
// members;
// class Complex;

// class Calculator
// {
//     public:
//     int add(int a, int b)
//     {
//         return a + b;
//     }

//     int sumComplex(Complex , Complex );//this is defined later because the
//     // data members it is using of the other class is not yet defined;
// };



// class Complex
// {
//     int a, b;
//     public:
//     void setNumber(int n,int n1)
//     {
//         a = n;
//         b = n1;
//         printNumber();
//     }
//     void printNumber()
//     {
//         cout << "Your number is " << a << " + " << b << "i" << endl;
//     }

//     friend int Calculator :: sumComplex(Complex o1, Complex o2);/*this means the sum real function of the class Calculator*/

// }num, num1, sum;

//     int Calculator :: sumComplex(Complex o1, Complex o2)
//     {
//         return o1.a + o2.a;
//     }


// int main()
// {
//     Complex o1, o2;
//     o1.setNumber(1, 4);
//     o2.setNumber(5, 7);
//     Calculator calc;
//     int res = calc.sumComplex(o1, o2);
//     cout << "The sum of the real part of o1 and o2 is " << res << endl;
//     return 0;
// }
// #include<iostream>
// using namespace std;
// class Y;

// class  X
// {
//     int data;
//     public:
//     void setvalue(int value)
//     {
//         data = value;
//     }
//     friend void add(X, Y);
// };

// class Y
// {
//     int num;
//     public:
//     void setvalue(int value)
//     {
//         num = value;
//     }
//     friend void add(X,Y);
// };

// void add(X o1, Y o2)
// {
//     cout  << "Summing datas of X and Y objects gives me " << o1.data + o2.num;
// }

// int main()
// {
//     X a;
//     a.setvalue(3);

//     Y b;
//     b.setvalue(5);
//     add(a, b);
//     return 0;
// }
// #include<iostream>
// using namespace std;

// class c2;

// class c1
// {
//     friend void swap(c1 &, c2 &);
//     int val;
//     public:
//     void indata(int a)
//     {
//         val = a;
//     }

//     void display()
//     {
//         cout << val << endl;
//     }
// };

// class c2
// {
//     friend void swap(c1 &, c2 &);
//     int val1;
//     public:
//     void indata(int b)
//     {
//         val1 = b;
//     }

//     void display()
//     {
//         cout << val1 << endl;
//     }
// };

// void swap(c1 &o1, c2 &o2)
// {
//     int swab;
//     swab = o1.val;
//     o1.val = o2.val1;
//     o2.val1 = swab;

// }

// int main()
// {   c1 a;
//     c2 b;
//     a.indata(23);
//     b.indata(34);
//     swap(a, b);
//     cout << "The values of the classes are interchanged " ;
//     a.display();
//     cout << "The values of the classes are interchanged ";
//     b.display();
//     return 0;
// }
// #include<iostream>
// using namespace std;
//
// class Complex
// {//creating a constructor constructor ia special number function with same name as of the class.
// // It is automatically invoked whenever an object is create;
// // This is because since the name of the constructor and the class are same the compiler understands that
// // we are calling the constructor function of the respective class;
// // It is used to initialize the objects of its class;
//
// int a, b;
//
// public:
// Complex(void); //constructor declaration;
//
// void printData()
// {
//     cout << "Your number is " << a << " + " << b << "i" << endl;
// }
//
// };
//
//
// Complex :: Complex(void)
// {
//     a = 0;
//     b = 0;
// }
//
// int main()
// {
//     Complex c;
//     c.printData();
//     return 0;
// }
// properties:
// 1. It should be declared in the public section of the class;
// 2. They are automatically invoked whenever the object is created;
// 3. Do not have return types;
// 4. It can have defaut arguments;
// 5. We cannot refer to their address;
// #include<iostream>
// using namespace std;
//
// int main(int argc, char const *argv[]) {
//   int a;
//   std::cout << "Enter a number : ";
//   std::cin >> a ;
//   std::cout << "The number you entered is : " << a;
//   return 0;
// }
// #include<iostream>
//
// class Complex
// {
//   int a, b;
//   void printNumber()
//   {
//     std::cout << "The complex number you entered is " << a << " + " << "i" << b;
//   }
// public:
//   void Input()
//   {
//     std::cout << "Enter the real part of the nubmer : " << '\n';
//     std::cin >> a;
//     std::cout << "Enter the impaginary part of the number : " << '\n';
//     std::cin >> b;
//     printNumber();
//   }
// };
//
// int main(int argc, char const *argv[]) {
// Complex o;
// o.Input();
//
//   return 0;
// }
// #include<iostream>
//
// class Complex
// {
//   int a, b;
//   friend void displayNumber(int , int)
// }
//
// int main(int argc, char const *argv[]) {
//
//   return 0;
// }

// #include<iostream>
//
// class Complex
// {
//   int a, b;
// public:
//   void setData(int num1, int num2){
//     a = num1;
//     b = num2;
//   }
//
//   void display()
//   {
//     std::cout << "The complex number you entered is : "<< a << " + i"<< b << '\n';
//   }
//
// }o1, o2;
//
// int main()
// {
//   std::cout << "A program to print a given number in Complex numbers." << '\n';
//
//
//   return 0;
// }

// #include<iostream>
//
// inline void reporterError(char *str)
// {
//   cout << endl << str;
//   exit(1);
// }
//
// int main() {
//   // code to open source files
//   if(fileOpeningfailed)
//       reporterError("Unable to open target file");
//
//   //code to open target files
//   if(fileOpeningfailed)
//       reporterError("Unable to open target file");
//
//     //code to copy contents of source file into target files
//   return 0;
// }

//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/////////////////////\\\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\\\\//////////////\\\\\\\\\\\\\\\/////////////\\\\\\\\\

// #include<iostream>
// using namespace std;
// class Rectangle
// {
//   int len, bre;
// public:
//   void getData()
// {
// std::cout << "Enter the length and breadth of the rectangle : " << endl;
// cin >> len >> bre;
// }
//   void setData(int l, int b)
// {
//   len = l;
//   bre = b;
// }
// void displayNumber()
// {
//   std::cout << "Length = " << len << '\n';
//   std::cout << "Breadth = " << bre << '\n';
// }
// void periArea()
// {
//   int area, peri;
//   area = len * bre;
//   peri = 2 * (len + bre);
//   std::cout << "Perimeter = " << peri << '\n';
//   std::cout << "Area = " << area << '\n';
// }
// };
// int main()
// {
//   int i = 3;
//   do{
//   Rectangle rect;
//   rect.getData();
//   rect.displayNumber();
//   rect.periArea();
//   i--;
// }while(i == 0);
// };

// #include<iostream>
//
// using namespace std;
//
// class Integer
// {
//   int data;
// public:
//   void getData()
//   {
//     std::cout << "Enter a number : " << '\n';
//     cin >> data;
//   }
//   void setData(int j)
// {
//   data = j;
// }
// Integer ()
// {
// }
// Integer(int j)
// {
//   data = j;
// }
// void displayData()
// {
//   cout << "You entered : " << data << endl;
// }
// };
//
// int main(int argc, char const *argv[]) {
//   std::cout << "This is a program to use constructor >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<" << '\n';
//   Integer i1(500), i2, i3;
//   i1.displayData();
//   i2.setData(404);
//   i2.displayData();
//   i3.getData();
//   i3.displayData();
//   return 0;
// }

// #include<iostream>
//
// using namespace std;
//
// class complex
// {
//   int re, im;
// public:
//   void getData()
//   {
//     cout << "Enter the real part of the complex numbers : ";
//     cin >> re >> im;
//     displayNumber();
//   }
//   void displayNumber()
//   {
//     cout << "The complex number you entered is " << re << " + i" << im;
//   }
//   friend sumComplex(int , int);
// };
//
// int sumComplex(int re, int im);
// {
//   int real;
//   real
// }
//
// int main(int argc, char const *argv[]) {
//  complex i;
//  i.getData();
//
//   return 0;
// }

#include<iostream>

using namespace std;

class Complex
{
  
}
